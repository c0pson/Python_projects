import customtkinter as ctk

def destroy_old_page(page):
    children = page.winfo_children()
    children[-1].destroy()

def listener(event, keys_history, label_1, check, text):
    characters = [  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 
                    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
                    '1', '2', '3', '4', '5', '6', '7', '8', '9', '0' ]
    if (event.keysym).lower() in characters:
        keys_history.append(event.keysym)
        create_check_mark(check, 'green')
    elif event.keysym == 'space':
        keys_history.append(' ')
        create_check_mark(check, 'green')
    elif event.keysym == 'period':
        keys_history.append('.')
        create_check_mark(check, 'green')
    elif event.keysym == 'BackSpace' and len(keys_history):
        keys_history.pop()
        destroy_old_page(check)
    elif event.keysym in characters or event.keysym == 'space' or event.keysym == 'period':
        create_check_mark(check, 'red')
    label_1.configure(text=f'{''.join(keys_history)}')

def create_check_mark(check, color):
    label = ctk.CTkFrame(master=check, width=9, height=3, fg_color=color)
    label.pack(side='left', padx=2)

def main():
    app = ctk.CTk()
    app.geometry('1080x720')
    font_x21 = ctk.CTkFont(family='JetBrains Mono Regular', size=21)
    text_text = 'Long text written for testing app 123.'
    keys_history = []

    frame = ctk.CTkFrame(master=app)
    frame.pack(side='top', anchor='center', expand=True)

    label = ctk.CTkLabel(master=frame, text=text_text, font=font_x21)
    label.pack(side='top', anchor='w', pady=10)

    label_1 = ctk.CTkLabel(master=frame, text='' , font=font_x21)
    label_1.pack(side='top', anchor='w', pady=2)

    check = ctk.CTkFrame(master=frame, height=5)
    check.pack(side='bottom', fill='x')

    app.bind('<Key>', lambda event: listener(event, keys_history, label_1, check, text_text))

    app.mainloop()

if __name__ == "__main__":
    main()
